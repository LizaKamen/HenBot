// <auto-generated />
using System;
using HenBot;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HenBot.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("HenBot.SavedUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAyaya")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAyayaed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConfiguring")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Page")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SavedUsers");
                });

            modelBuilder.Entity("HenBot.TagQuery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SavedUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SavedUserId");

                    b.ToTable("TagQuery");
                });

            modelBuilder.Entity("HenBot.TagQuery", b =>
                {
                    b.HasOne("HenBot.SavedUser", "SavedUser")
                        .WithMany("SavedTags")
                        .HasForeignKey("SavedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavedUser");
                });

            modelBuilder.Entity("HenBot.SavedUser", b =>
                {
                    b.Navigation("SavedTags");
                });
#pragma warning restore 612, 618
        }
    }
}
